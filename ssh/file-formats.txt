Miles Hoene-Langdon

-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8ZYi1qwhIgudgbGN/
LjDHDqwFP56mr4ym6vA6nlSGCyqOuJp5XsUHwwOzYgPFEni6I9yCLDvQ6TpI/LSx5FUPdSvjgaDBpEmP3OgctcpC3bbA/
JxCbaQIGyFtqPhYjE+FEgzVTagRT30QwrxlHFx+eFQdCmfA22V4cYL1BBTR8UsqIEzRUNfed5lqmi2isEslGWTWOUYMA3vh8NZaX2
G5E/jBWyKLT9t7rmPT56yzUkurnSGLChBpSan+pk80bkS0Iyt5mODGPHrhxjLYSm5H3mY4XGDOJ8o77W+DrnoJv8POp9lW/
Hy6z3ePFNvHLcSwEaUMdjabi9QbNYlVhZ8InNDLrJDYrFviSt8w1eXiSG3m/
MYAP6fJQPfTJcGiZW8fGNgFdWVnZFD5yttwFvqfVrphp/
0oZQK54d+0W9fJgDLFr4TqneapWzfh4dbzmsyc9e5x2NhuhLCHWSEM9Dw9END44VrrPJ6K7xayS9ufzu9nNGtIe4JTlfQ0vjb/
xXc= mileshoenelangdon@Mac.local


Private Key:

In the id_rsa_homework, I expect that there will be an RSAPrivateKey which is a sequence with the following fields: 
version (INTEGER), modulus which is the RSA modulus n, publicExponent is the RSA public exponent e, privateExponent which is the RSA private exponent d, prime1
which is the prime factor p of n, prime2 which is the prime factor q of n, exponent1 which is d mod (p - 1), exponent2 which is d mod (q - 1), and coefficient
which is the CRT coefficient q^(-1) mod p. 

To decode the private key file I used Michael Holtstrom's ASN.1 decoder. I first copied the base64 encoding from the id_rsa_homework file and pasted it into the input
field. Then, I selected base64 to ASN.1 and read the results that followed.

The first integer is the version. This integer will have a value of either 0, which specifies that two-prime is being used, or 1, which means that multiprime is being used. The
value of the first integer is 0 in decimal. The bytes that represent this first integer have an offset of 4. The DER encoding of this integer specifies that this integer is universal,
a primitive, an integer type, and has a length of 1 octet. 

The second integer is the modulous (n) value. This integer should have a value of n = p * q. The value of the second integer in hexidecimal is 
"0x00bc6588b5ab084882e7606c637f2e30c70eac053f9ea6af8ca6eaf03a9e54860b2a8eb89a795ec507c303b36203c51278ba23dc822c3bd0e93a
48fcb4b1e4550f752be381a0c1a4498fdce81cb5ca42ddb6c0fc9c426da4081b216da8f8588c4f85120cd54da8114f7d10c2bc651c5c7e78541d0a67c0db6578
7182f50414d1f14b2a204cd150d7de77996a9a2da2b04b251964d639460c037be1f0d65a5f61b913f8c15b228b4fdb7bae63d3e7acb3524bab9d218b0a106949a9
fea64f346e44b4232b7998e0c63c7ae1c632d84a6e47de66385c60ce27ca3bed6f83ae7a09bfc3cea7d956fc7cbacf778f14dbc72dc4b011a50c
76369b8bd41b358955859f089cd0cbac90d8ac5be24adf30d5e5e2486de6fcc6003fa7c940f7d325c1a2656f1f18d8057565676450f9cadb7016fa9f56ba61a7fd2865
02b9e1dfb45bd7c98032c5af84ea9de6a95b37e1e1d6f39acc9cf5ee71d8d86e84b08759210cf43c3d10d0f8e15aeb3c9e8aef16b24bdb9fceef67346b487b825395f434be36ffc577".
The bytes that represent this integer have an offset of 7. The DER encoding of this integer specifies that this integer is universal, a primitive, an integer type, and has a 
length in long form with 2 octets that show that the integer has a length of 385 bytes.

The third integer is the public exponent (e). The decimal value of the third integer is 65537. The bytes that represent his integer have an offset of 396. The DER encoding of this
integer specifies that this integer is universal, a primitive, an integer type, and has a lenth in definite or short form of 3 octets that show that the integer has a length of 3
bytes.

The fourth integer is the private exponent (d). The value of the fourth integer in hexidecimal is 
"0x0094998dbca5bc31ddb6fd32614496bd78b554f00adf6be0ba138aea9382016f7d6d4307cf287e9cf0e35c8ee877cac12822c2589300aae9bc9cf1a70a2beacb41170dd8348e
054f3d8ad116f0565fc460375f7fa10d30881ab0b3ac588412ec116907f4c166b0737efc49f5203eaca1344c5b2450e9c79006387b686d349beb80e4e5c47672ffce55b686773447
5cb4ab8106c7a7c5a33fa49bd97a6ac8fbc50c03f9c921c65c964fabfdc0d60b3e086f982a34159a230510d73ed4128014fe07ae803fbec78ac48e031aa88018b24ab6d4a78afeeb
0d521311b500307d98326c520e0ea3d06ff53f9ec65309000cf459c421aacf4bd202c2992795b6599dafaf87b310fbf096531d2d64bbd0c2a51ae496bdeb46d21565e363dc3143618
1ec9634eef349111c548889a6230207fc0f8b71a3574ea10a7234830e978795239d1ad2adf2d800a41a3f3d346a7ba75cb2f8bd659478c12f454f1e33663b53b0618383d94c9b1d2e
a8c3152b6266ea689d1e55037b61428232a7f34021fb33f428f1". The bytes that represent this integer have an offset of 401. The DER encoding of this integer specifies that this integer is
universal, a primitive, an integer type and has a length in long form with two octets that show that the integer has a length of 385 bytes.


The fifth integer is the first prime number (p). The value of the fifth integer in hexidecmial is 
"0x00dfc8cc8f8c797aa1dff5aefdd6547105b075521dc79a3950ea3b8322da139b65a1ac91bb41885ac584f2922f8c37b960c69fcdd90f398f28456e1924b77285db0cf93cf723c7
e5aebce7b59efd910aaaac0b8dd8911ee6d2fc51f659c60be01bd29328ab9d30d1fb724f6865270c881d32538c8eb3e1ca7aecc164884b491c2175e072e40452d6cdfb15c77d8ecd2
1c54725677c16ac91d4ac0ba0119d5eafe1c0ed6b6a44f5ccd175e497b22375aeebbf14f11235b5a6ce8428b56c5a0f6d9f". The bytes that represent this integer have an offset of 790.  The bytes that
represent this integer have an offset of 401. The DER encoding of this integer specifies that this integer is universal, a primitive, an integer type and has a length in long 
form with one octets that show that the integer has a length of 193 bytes.

The sixth integer is the second prime number (q). The value of the sixth integer in hexidecimal is
"0x00d78493ff7b0b9f5f9856b88cbb6374063993bcf97fa20412efa101baed9fb1d09d76b68b1e581beb1e71b45a462d0b936fd6a53147930d16cfcd9e5a1caba212e07ccd8b2b89
0285c8542f8008c406250e699828231585a4eaf0546fdb224a1d67be8a9988c87dc0cad2c0ac8ec9ebc4abb1edf972324732b59543831f80a0555ab3bc60f0234ce47c4c7a05447a9
75466bc2b3b47e0f5f79b0bc386a0ea667507136f2cbe2027d9a6c909dcae2c265913f49549074431f777ebcf5f4dcf6929". The bytes that represent this integer have an offset of 986. The DER encoding 
of this integer specifies that this integer is universal, a primitive, an integer type and has a length in long form with one octets that show that the integer has a length of 
193 bytes.

The seventh integer is exponent #1. This integer is equal to d mod (p-1). The value of the seventh integer in hexidecimal is
"0x00d4197a207810cf354b928d47d2f377a7dfc6628d0d18d44827a93e323325303cd44e3e558fd80fc873a880fb85d76ee1158072d6cec24c37ec0e5cd05afab579974347102a1e
9547d78d79ab7643192c08226f4f9ac4021c68bfba50fe0f555aa96b86b99923a371c1b71787ffc9b5dc8e4d77c3ed240d08130b7d205cd2af51db6a5f1a542abba2c0deb494015bd
52d28b07ff3b17de03e04ce83e90e11a77bbda2891350c6f3587777b07b4b7687d2b2e9c34ef20ef84976232b48c5d7279b". The bytes that represent this integer have an offset of 1182. The DER encoding
of this integer specifies that this integer is universal, a primitive, an integer type and has a length in long form with one octets that show that the integer has a length of 193
bytes.

The eighth integer is exponent #2. This integer is equal to d mod (q-1). The value of the eighth integer in hexidecimal is
"0x45c4c5a48f50d3e73e89d474bab5177a6c694763fdcd95440c0f3360304ce263869647c201b0c458f9221620a35731c8290c73ade05dda7ee806c89ca36b6cac6fbff74a766d844
38af6b5e9dcec9890a679c8a835b361f0619e2bb78a592f651590b98dba9a2d1b9c8d5d927f271f0c2c090de112f6f3d596b31b87f74acc9cd5201a7bc741a642d17a708604052bb84
709e374ed7006308220eccb488c995e894be151babaee2ba7b2ad5ea383e7662eef9ee46555ce572e9b4826b229d301". The bytes that represent this integer have an offset of 1378. The DER encoding of
this integer specifies that this integer is universal, a primitive, an integer type and has a length in long form with one octets that show that the integer has a length of 
192 bytes.

The nineth integer is the coefficient. This integer is equal to (inverse of q) mod p. The value of the nineth integer in hexidecimal is
"0x00c7c571b7cafcc0ba536d40a0b7bbba47740f94fc4d26baa935a571642cf660cf5f2129e310e9cd5e933761ca2546461b99157d9c7728dbad6a900eefd6c3f9bb0f06fe14aeba6f
d8d5c821effcd3b79761b17704e18f7874d7159c2351071e2135862d06b5c0b33938843aeafbae354454218bced09e701c15c778396fbb25195121e5ea3d01316be5f4ac8387ed58c97
b8cb5998eadf8d9f872945ba6ad0aefdbdcc02ddfa335d7ff153f65c0bdf20a94d2700fffed89d0ad124893ddc3e446". The bytes that represent this integer have an offset of 1573. The DER encoding of
this integer specifies that this integer is universal, a primitive, an integer type and has a length in long form with one octets that show that the integer has a length of 193 bytes.


Public Key:
I expect to find the string "ssh-rsa", the e value, and the n value.

I decoded the public key file by running the command:
cat id_rsa_homework.pub | cut -d " " -f2 | \
  base64 -d | hexdump -ve '/1 "%02x "' -e '2/8 "\n"'
to get the binary file of the data. Then I used the file format outlined in RFC 4253 to read the binary.

The first integer in the file is e. The value of e is 65537 in decimal. This is the same e as in the private key.

The second integer in the file is n. The vlaue of n in hexidecimal is 
"0x00bc6588b5ab084882e7606c637f2e30c70eac053f9ea6af8ca6eaf03a9e54860b2a8eb89a795ec507c303b36203c51278ba23dc822c3bd0e93a
48fcb4b1e4550f752be381a0c1a4498fdce81cb5ca42ddb6c0fc9c426da4081b216da8f8588c4f85120cd54da8114f7d10c2bc651c5c7e78541d0a67c0db6578
7182f50414d1f14b2a204cd150d7de77996a9a2da2b04b251964d639460c037be1f0d65a5f61b913f8c15b228b4fdb7bae63d3e7acb3524bab9d218b0a106949a9
fea64f346e44b4232b7998e0c63c7ae1c632d84a6e47de66385c60ce27ca3bed6f83ae7a09bfc3cea7d956fc7cbacf778f14dbc72dc4b011a50c
76369b8bd41b358955859f089cd0cbac90d8ac5be24adf30d5e5e2486de6fcc6003fa7c940f7d325c1a2656f1f18d8057565676450f9cadb7016fa9f56ba61a7fd2865
02b9e1dfb45bd7c98032c5af84ea9de6a95b37e1e1d6f39acc9cf5ee71d8d86e84b08759210cf43c3d10d0f8e15aeb3c9e8aef16b24bdb9fceef67346b487b825395f434be36ffc577".
This is the same d as in the private key.


Sanity Check:
First, I entered all the values above into python after converting them to decimal using an online conververter. Then, using the python numpy library,
I was able to cacluate lambda__ = np.lcm(p - 1, q - 1) and used this to verify that (e * d) % lambda__ = 1. I also verified that
np.gcd(e, lambda_) = 1. Lastlym n == p * q and e < lambda__ both returned true.

